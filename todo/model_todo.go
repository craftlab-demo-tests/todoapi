/*
 * todo-service
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package todoclient

import (
	"encoding/json"
)

// Todo struct for Todo
type Todo struct {
	Id *int32 `json:"id,omitempty"`
	Title string `json:"title"`
	Userid int32 `json:"userid"`
}

// NewTodo instantiates a new Todo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTodo(title string, userid int32, ) *Todo {
	this := Todo{}
	this.Title = title
	this.Userid = userid
	return &this
}

// NewTodoWithDefaults instantiates a new Todo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTodoWithDefaults() *Todo {
	this := Todo{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Todo) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Todo) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Todo) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Todo) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value
func (o *Todo) GetTitle() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Todo) GetTitleOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Todo) SetTitle(v string) {
	o.Title = v
}

// GetUserid returns the Userid field value
func (o *Todo) GetUserid() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.Userid
}

// GetUseridOk returns a tuple with the Userid field value
// and a boolean to check if the value has been set.
func (o *Todo) GetUseridOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Userid, true
}

// SetUserid sets field value
func (o *Todo) SetUserid(v int32) {
	o.Userid = v
}

func (o Todo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["userid"] = o.Userid
	}
	return json.Marshal(toSerialize)
}

type NullableTodo struct {
	value *Todo
	isSet bool
}

func (v NullableTodo) Get() *Todo {
	return v.value
}

func (v *NullableTodo) Set(val *Todo) {
	v.value = val
	v.isSet = true
}

func (v NullableTodo) IsSet() bool {
	return v.isSet
}

func (v *NullableTodo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTodo(val *Todo) *NullableTodo {
	return &NullableTodo{value: val, isSet: true}
}

func (v NullableTodo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTodo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


